openapi: 3.0.1
info:
  title: api-support-management
  contact: {}
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "9.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
  - name: Errand Parameters
    description: Errand parameter operations
  - name: Errand attachments
    description: Errand attachments operations
  - name: Configuration for namespace
    description: Namespace configuration operations
  - name: Metadata for categories
    description: Category metadata operations
  - name: Revisions
    description: Errand and errand note revision operations
  - name: Metadata for labels
    description: Label metadata operations
  - name: Errand notes
    description: Errand notes operations
  - name: Metadata for contact reasons
    description: Contact reason metadata operations
  - name: Errand events
    description: Errand event operations
  - name: User notifications
    description: User notifications operations
  - name: Metadata for externalid types
    description: Externaid type metadata operations
  - name: Metadata
    description: Metadata operations
  - name: Metadata for roles
    description: Role metadata operations
  - name: Time measures
    description: Time measure operations
  - name: Errand labels
    description: Errand labels operations
  - name: Metadata for statuses
    description: Status metadata operations
  - name: Errand communication
    description: Errand communication operations
  - name: MessageAttachments
    description: CommunicationAttachment operations
  - name: Configuration for email integration
    description: Settings for email integration per namespace/municipality
  - name: Errands
    description: Errand operations
=======
<<<<<<< HEAD
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
- name: Errand attachments
  description: Errand attachments operations
- name: Errand Parameters
  description: Errand parameter operations
- name: Configuration for namespace
  description: Namespace configuration operations
- name: Metadata for categories
  description: Category metadata operations
- name: Revisions
  description: Errand and errand note revision operations
- name: Metadata for labels
  description: Label metadata operations
- name: Errand notes
  description: Errand notes operations
- name: Metadata for contact reasons
  description: Contact reason metadata operations
- name: Errand events
  description: Errand event operations
- name: User notifications
  description: User notifications operations
- name: Metadata for externalid types
  description: ExternalIdType metadata operations
- name: Metadata
  description: Metadata operations
- name: Metadata for roles
  description: Role metadata operations
- name: Time measures
  description: Time measure operations
- name: Errand labels
  description: Errand labels operations
- name: Metadata for statuses
  description: Status metadata operations
- name: Errand communication
  description: Errand communication operations
- name: Configuration for email integration
  description: Settings for email integration per municipality/namespace
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
- name: MessageAttachments
  description: CommunicationAttachment operations
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
- name: MessageAttachments
  description: CommunicationAttachment operations
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
- name: Errands
  description: Errand operations
paths:
  /{municipalityId}/{namespace}/namespace-config:
    get:
      tags:
      - Configuration for namespace
      summary: Read namespace config
      description: Fetches namespace config for a namespace/municipality
      operationId: readNamespaceConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
        "404":
          description: Not Found
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
=======
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server Error
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "404":
          description: Not Found
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceConfig"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/NamespaceConfig"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 7a702cb (UF-10584: Add logic)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceConfig"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/NamespaceConfig"
<<<<<<< HEAD
        "400":
          description: Bad Request
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server Error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceConfig"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/NamespaceConfig"
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server Error
=======
        "400":
          description: Bad Request
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    put:
      tags:
      - Configuration for namespace
      summary: Update namespace config
      description: Update config that is used within the namespace
      operationId: updateNamespaceConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NamespaceConfig"
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
<<<<<<< HEAD
        "204":
          description: Successful operation
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
    post:
      tags:
      - Configuration for namespace
      summary: Create namespace config
      description: Create config that is used within the namespace
      operationId: createNamespaceConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NamespaceConfig"
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
<<<<<<< HEAD
              schema:
                type: string
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
              schema:
                type: string
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
<<<<<<< HEAD
              schema:
                $ref: "#/components/schemas/Problem"
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    delete:
      tags:
      - Configuration for namespace
      summary: Delete namespace config
      description: Deletes the config for a namespace/municipality
      operationId: deleteNamespaceConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
<<<<<<< HEAD
        "404":
          description: Not Found
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
<<<<<<< HEAD
              schema:
                type: string
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
              schema:
                type: string
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
    delete:
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 416de18 (UF-10583: Update API)
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/metadata/labels:
    get:
<<<<<<< HEAD
=======
>>>>>>> fd310fe (UF-10583: Update API)
      tags:
      - Configuration for namespace
      summary: Delete namespace config
      description: Deletes the config for a namespace/municipality
      operationId: deleteNamespaceConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
        "204":
          description: Successful operation
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
        "204":
          description: Successful operation
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
  /{municipalityId}/{namespace}/metadata/labels:
    get:
>>>>>>> 416de18 (UF-10583: Update API)
      tags:
      - Metadata for labels
      summary: Get label structure
      description: Get label structure for provided namespace and municipality
      operationId: getLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
=======
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: Successful operation
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
  /{municipalityId}/{namespace}/metadata/labels:
    get:
      tags:
      - Metadata for labels
      summary: Get label structure
      description: Get label structure for provided namespace and municipality
      operationId: getLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Labels"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Labels"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    put:
      tags:
      - Metadata for labels
      summary: Update label structure
      description: Update label structure for provided namespace and municipality
      operationId: updateLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Label"
        required: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
>>>>>>> 416de18 (UF-10583: Update API)
    post:
      tags:
      - Metadata for labels
      summary: Create label structure
      description: Create label structure for provided namespace and municipality
      operationId: createLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Label"
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
<<<<<<< HEAD
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 416de18 (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "202":
          description: Successful operation
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "202":
          description: Successful operation
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
=======
        "202":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "202":
          description: Successful operation
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
        "202":
          description: Successful operation
<<<<<<< HEAD
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        "202":
          description: Successful operation
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    delete:
      tags:
      - Metadata for labels
      summary: Delete label structure
      description: Delete label structure for provided namespace and municipality
      operationId: deleteLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
    put:
=======
        "202":
          description: Successful operation
    delete:
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/errands/{errandId}/labels:
    get:
>>>>>>> 4aad4eb (UF-10583: Update API)
      tags:
      - Metadata for labels
      summary: Update label structure
      description: Update label structure for provided namespace and municipality
      operationId: updateLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
<<<<<<< HEAD
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Label"
=======
      - name: errandId
        in: path
        description: Errand id
>>>>>>> 4aad4eb (UF-10583: Update API)
        required: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "204":
          description: Successful operation
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
=======
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: Successful operation
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
    post:
      tags:
      - Metadata for labels
      summary: Create label structure
      description: Create label structure for provided namespace and municipality
      operationId: createLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Label"
        required: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "202":
          description: Successful operation
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "202":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> fd310fe (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> fd310fe (UF-10583: Update API)
    delete:
      tags:
      - Metadata for labels
      summary: Delete label structure
      description: Delete label structure for provided namespace and municipality
      operationId: deleteLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
        "204":
          description: Successful operation
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
        "204":
          description: Successful operation
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
<<<<<<< HEAD
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "204":
          description: Successful operation
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 416de18 (UF-10583: Update API)
  /{municipalityId}/{namespace}/errands/{errandId}/labels:
    get:
      tags:
      - Errand labels
      summary: Get errand labels
      description: Get errand labels
      operationId: getErrandLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      responses:
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
<<<<<<< HEAD
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    put:
      tags:
      - Errand labels
      summary: Replace errand labels
      description: Replace all labels of an errand
      operationId: updateErrandLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
<<<<<<< HEAD
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: No content
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "204":
          description: No content
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "201":
          description: Created
          content:
            application/json: {}
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "201":
          description: Created
          content:
            application/json: {}
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "201":
          description: Created
          content:
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: No content
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: No content
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: No content
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "204":
          description: No content
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    post:
      tags:
      - Errand labels
      summary: Add errand labels
      description: Add errand labels to an errand
      operationId: addErrandLabels
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not Found
          content:
<<<<<<< HEAD
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "201":
          description: Created
          content:
            application/json: {}
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
=======
            application/json: {}
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "201":
          description: Created
          content:
<<<<<<< HEAD
            application/json: {}
        "500":
          description: Internal Server error
=======
<<<<<<< HEAD
            application/json: { }
        "400":
          description: Bad request
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "201":
          description: Created
          content:
            application/json: {}
<<<<<<< HEAD
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
            application/json: {}
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
            application/json: {}
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    delete:
      tags:
      - Errand labels
      summary: Remove errand labels
      description: Remove all labels of an errand
      operationId: removeErrandLabel
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand errandId
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      responses:
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: No content
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
        "204":
          description: No content
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 416de18 (UF-10583: Update API)
        "204":
          description: No content
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/viewed/{isViewed}:
=======
        "204":
          description: No content
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationID}/viewed/{isViewed}:
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "204":
          description: No content
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/viewed/{isViewed}:
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    put:
      tags:
      - Errand communication
      description: Set viewed status for communication.
      operationId: updateViewedStatus
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: communicationId
        in: path
        description: communication ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: isViewed
        in: path
        description: If a message is viewed
        required: true
        schema:
          type: boolean
        example: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
=======
        "204":
          description: No content
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "204":
          description: No content
<<<<<<< HEAD
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/viewed/{isViewed}:
=======
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationID}/viewed/{isViewed}:
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: No content
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: No content
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/viewed/{isViewed}:
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    put:
      tags:
      - Errand communication
      description: Set viewed status for communication.
      operationId: updateViewedStatus
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: No content - Successful operation
  /{municipalityId}/{namespace}/email-integration-config:
    get:
      tags:
      - Configuration for email integration
      summary: Read email integration config
      description: Fetches email integration config for a municipality/namespace
      operationId: readEmailIntegrationConfig
>>>>>>> fd310fe (UF-10583: Update API)
      parameters:
<<<<<<< HEAD
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: communicationId
        in: path
        description: communication ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: isViewed
        in: path
        description: If a message is viewed
        required: true
        schema:
          type: boolean
        example: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "400":
          description: Bad request
=======
=======
=======
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server Error
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailIntegration"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/EmailIntegration"
>>>>>>> 7a702cb (UF-10584: Add logic)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                oneOf:
<<<<<<< HEAD
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: No content - Successful operation
  /{municipalityId}/{namespace}/email-integration-config:
    get:
      tags:
      - Configuration for email integration
      summary: Read email integration config
      description: Fetches email integration config for a municipality/namespace
      operationId: readEmailIntegrationConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server Error
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailIntegration"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    put:
      tags:
      - Configuration for email integration
      summary: Update email integration config
      description: Update email integration config that fetches emails from email-reader
        service
      operationId: updateEmailIntegrationConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailIntegration"
        required: true
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
    post:
      tags:
      - Configuration for email integration
      summary: Create email integration config
      description: Create email integration config that fetches emails from email-reader
        service
      operationId: createEmailIntegrationConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailIntegration"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - Configuration for email integration
      summary: Delete email integration config
      description: Deletes the email integration config for a municipality/namespace
      operationId: deleteEmailIntegrationConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
<<<<<<< HEAD
          description: Successful operation
  /{municipalityId}/{namespace}/metadata/statuses:
    get:
      tags:
      - Metadata for statuses
      summary: Get statuses
      description: Get all statuses for the namespace and municipality
      operationId: getStatuses
=======
          description: No content - Successful operation
  /{municipalityId}/{namespace}/email-integration-config:
    get:
      tags:
      - Configuration for email integration
      summary: Read email integration config
      description: Fetches email integration config for a municipality/namespace
      operationId: readEmailIntegrationConfig
>>>>>>> 4aad4eb (UF-10583: Update API)
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 416de18 (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    post:
      tags:
      - Metadata for statuses
      summary: Create status
      description: Create new status for the namespace and municipality
      operationId: createStatus
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/roles:
    get:
      tags:
      - Metadata for roles
      summary: Get roles
      description: Get all roles for the namespace and municipality
      operationId: getRoles
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Metadata for roles
      summary: Create role
      description: Create new role for the namespace and municipality
      operationId: createRole
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/external-id-types:
    get:
      tags:
      - Metadata for externalid types
      summary: Get externalIdTypes
      description: Get all externalIdTypes for the namespace and municipality
      operationId: getExternalIdTypes
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalIdType"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Metadata for externalid types
      summary: Create externalIdType
      description: Create new externalIdType for the namespace and municipality
      operationId: createExternalIdType
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalIdType"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/contactreasons:
    get:
      tags:
      - Metadata for contact reasons
      summary: Get contact reasons for given namespace and municipalityId
      description: Get all contact reasons for the namespace and municipality
      operationId: getContactReasons
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContactReason"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Metadata for contact reasons
      summary: Create contact reason
      description: Create new contact reason for the namespace and municipality
      operationId: createContactReason
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactReason"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/categories:
    get:
      tags:
      - Metadata for categories
      summary: Get categories and types
      description: Get all categories and their connected types for the namespace
        and municipality
      operationId: getCategories
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Metadata for categories
      summary: Create category
      description: Create new category for the namespace and municipality
      operationId: createCategory
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands:
    get:
      tags:
      - Errands
      summary: Read matching errands
      description: Query for errands with or without filters. The resource allows
        the client a wide range of variations on how to filter the result.
      operationId: findErrands
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: filter
        in: query
        description: "Syntax description: [spring-filter](https://github.com/turkraft/spring-filter/blob/85730f950a5f8623159cc0eb4d737555f9382bb7/README.md#syntax)"
        required: true
        schema:
          type: string
        example: categoryTag:'SUPPORT-CASE' and stakeholder.externalId:'81471222-5798-11e9-ae24-57fa13b361e1'
          and externalTags.key:'caseid' and externalTags.value:'111' and created>'2022-09-08T12:00:00.000+02:00'
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageErrand"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Errands
      summary: Create errand
      description: Creates a new errand based on the supplied attributes
      operationId: createErrand
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errand"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{errandId}/notifications:
    get:
      tags:
      - User notifications
      summary: Get notifications
      description: "Get all notifications for the namespace, municipality and errand"
      operationId: getNotificationsByErrandId
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
<<<<<<< HEAD
=======
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
        - User notifications
      summary: Create notification
      description: Create new notification for the namespace and municipality
      operationId: createNotification
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
        required: true
      responses:
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      tags:
        - User notifications
      summary: Update notification
      description: Update notifications for the namespace and municipality
      operationId: updateNotifications
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Notification"
        required: true
      responses:
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
  /{municipalityId}/{namespace}/metadata/statuses:
    get:
      tags:
        - Metadata for statuses
=======
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
  /{municipalityId}/{namespace}/metadata/statuses:
    get:
      tags:
      - Metadata for statuses
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
      summary: Get statuses
      description: Get all statuses for the namespace and municipality
      operationId: getStatuses
      parameters:
<<<<<<< HEAD
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailIntegration"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/EmailIntegration"
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server Error
=======
        "400":
          description: Bad Request
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    put:
      tags:
      - Configuration for email integration
      summary: Update email integration config
      description: Update email integration config that fetches emails from email-reader
        service
      operationId: updateEmailIntegrationConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailIntegration"
        required: true
      responses:
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
    post:
      tags:
      - Configuration for email integration
      summary: Create email integration config
      description: Create email integration config that fetches emails from email-reader
        service
      operationId: createEmailIntegrationConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailIntegration"
        required: true
      responses:
<<<<<<< HEAD
=======
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
<<<<<<< HEAD
              schema:
                $ref: "#/components/schemas/Problem"
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    delete:
      tags:
      - Configuration for email integration
      summary: Delete email integration config
      description: Deletes the email integration config for a municipality/namespace
      operationId: deleteEmailIntegrationConfig
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
  /{municipalityId}/{namespace}/metadata/statuses:
    get:
      tags:
      - Metadata for statuses
      summary: Get statuses
      description: Get all statuses for the namespace and municipality
      operationId: getStatuses
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Status"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
    post:
      tags:
      - User notifications
      summary: Create notification
      description: Create new notification for the namespace and municipality
      operationId: createNotification
=======
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
    post:
      tags:
      - Metadata for statuses
      summary: Create status
      description: Create new status for the namespace and municipality
      operationId: createStatus
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
<<<<<<< HEAD
        description: Municipality ID
=======
        description: Municipality id
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        required: true
        schema:
          type: string
        example: 2281
<<<<<<< HEAD
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
        required: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "409":
          description: Conflict
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
<<<<<<< HEAD
  /{municipalityId}/{namespace}/errands/{errandId}/notifications:
=======
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
  /{municipalityId}/{namespace}/metadata/roles:
>>>>>>> fd310fe (UF-10583: Update API)
    get:
      tags:
<<<<<<< HEAD
      - User notifications
      summary: Get notifications
      description: "Get all notifications for the namespace, municipality and errand"
      operationId: getNotificationsByErrandId
      parameters:
<<<<<<< HEAD
=======
      - Metadata for roles
      summary: Get roles
      description: Get all roles for the namespace and municipality
      operationId: getRoles
      parameters:
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
<<<<<<< HEAD
        description: Municipality ID
=======
        description: Municipality id
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        required: true
        schema:
          type: string
        example: 2281
<<<<<<< HEAD
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
=======
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Metadata for roles
      summary: Create role
      description: Create new role for the namespace and municipality
      operationId: createRole
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/external-id-types:
    get:
      tags:
      - Metadata for externalid types
      summary: Get externalIdTypes
      description: Get all externalIdTypes for the namespace and municipality
      operationId: getExternalIdTypes
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalIdType"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalIdType"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Metadata for externalid types
      summary: Create externalIdType
      description: Create new externalIdType for the namespace and municipality
      operationId: createExternalIdType
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalIdType"
        required: true
      responses:
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/contactreasons:
    get:
      tags:
      - Metadata for contact reasons
      summary: Get contact reasons for given namespace and municipalityId
      description: Get all contact reasons for the namespace and municipality
      operationId: getContactReasons
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "200":
          description: Successful operation
          content:
            application/json: {}
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "200":
          description: Successful operation
          content:
            application/json: {}
<<<<<<< HEAD
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    post:
      tags:
      - Metadata for contact reasons
      summary: Create contact reason
      description: Create new contact reason for the namespace and municipality
      operationId: createContactReason
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactReason"
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/categories:
    get:
      tags:
      - Metadata for categories
      summary: Get categories and types
      description: Get all categories and their connected types for the namespace
        and municipality
      operationId: getCategories
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Metadata for categories
      summary: Create category
      description: Create new category for the namespace and municipality
      operationId: createCategory
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands:
    get:
      tags:
      - Errands
      summary: Read matching errands
      description: Query for errands with or without filters. The resource allows
        the client a wide range of variations on how to filter the result.
      operationId: findErrands
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: filter
        in: query
        description: "Syntax description: [spring-filter](https://github.com/turkraft/spring-filter/blob/85730f950a5f8623159cc0eb4d737555f9382bb7/README.md#syntax)"
        required: true
        schema:
          type: string
        example: categoryTag:'SUPPORT-CASE' and stakeholder.externalId:'81471222-5798-11e9-ae24-57fa13b361e1'
          and externalTags.key:'caseid' and externalTags.value:'111' and created>'2022-09-08T12:00:00.000+02:00'
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageErrand"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/PageErrand"
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    post:
      tags:
      - Errands
      summary: Create errand
      description: Creates a new errand based on the supplied attributes
      operationId: createErrand
      parameters:
<<<<<<< HEAD
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
>>>>>>> fd310fe (UF-10583: Update API)
            type: string
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
=======
        "201":
>>>>>>> fd310fe (UF-10583: Update API)
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
  /{municipalityId}/{namespace}/errands/{errandId}/notifications:
>>>>>>> 4aad4eb (UF-10583: Update API)
    post:
      tags:
      - User notifications
      summary: Create notification
      description: Create new notification for the namespace and municipality
      operationId: createNotification
      parameters:
<<<<<<< HEAD
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
<<<<<<< HEAD
<<<<<<< HEAD
        description: Municipality ID
=======
        description: Municipality id
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        description: Municipality id
>>>>>>> 4aad4eb (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: 2281
<<<<<<< HEAD
<<<<<<< HEAD
      - name: errandId
        in: path
        description: Errand ID
=======
      - name: errandId
        in: path
        description: Errand id
>>>>>>> 4aad4eb (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
        required: true
      responses:
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
  /{municipalityId}/{namespace}/errands/{errandId}/notifications:
    get:
      tags:
      - User notifications
      summary: Get notifications
      description: "Get all notifications for the namespace, municipality and errand"
      operationId: getNotificationsByErrandId
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
<<<<<<< HEAD
=======
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
  /{municipalityId}/{namespace}/errands/{errandId}/notifications:
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    post:
      tags:
      - User notifications
      summary: Create notification
      description: Create new notification for the namespace and municipality
      operationId: createNotification
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
        required: true
      responses:
<<<<<<< HEAD
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
=======
=======
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "400":
          description: Bad request
          content:
            application/problem+json:
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
              schema:
<<<<<<< HEAD
                type: string
<<<<<<< HEAD
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        "201":
          description: Created - Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/errands/{errandId}/notes:
    get:
      tags:
      - Errand notes
      summary: Find errand notes
      description: Find the errand notes that matches the provided attributes
      operationId: findErrandNotes
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: findErrandNotesRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/FindErrandNotesRequest"
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
<<<<<<< HEAD
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: findErrandNotesRequest
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/FindErrandNotesRequest"
      responses:
=======
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindErrandNotesResponse"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/FindErrandNotesResponse"
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    post:
      tags:
      - Errand notes
      summary: Create errand note
      description: Creates a new errand note based on the supplied attributes
      operationId: createErrandNote
      parameters:
>>>>>>> 4aad4eb (UF-10583: Update API)
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: findErrandNotesRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/FindErrandNotesRequest"
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
=======
>>>>>>> 416de18 (UF-10583: Update API)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
<<<<<<< HEAD
=======
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindErrandNotesResponse"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
  /{municipalityId}/{namespace}/errands/{errandId}/communication/sms:
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    post:
      tags:
      - Errand notes
      summary: Create errand note
      description: Creates a new errand note based on the supplied attributes
      operationId: createErrandNote
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateErrandNoteRequest"
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
<<<<<<< HEAD
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
              schema:
                type: string
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 416de18 (UF-10583: Update API)
  /{municipalityId}/{namespace}/errands/{errandId}/communication/sms:
    post:
      tags:
      - Errand communication
      summary: Send sms to in context of an errand
      description: Sends a sms message to the recipient specified in the request
      operationId: sendSms
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsRequest"
        required: true
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "204":
          description: Successful operation
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/communication/email:
    post:
      tags:
      - Errand communication
      summary: Send email to in context of an errand
      description: Sends an email message to the recipient specified in the request
      operationId: sendEmail
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
<<<<<<< HEAD
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailRequest"
        required: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/attachments:
    get:
      tags:
      - Errand attachments
      summary: Read errand attachments
      description: Fetches the errand attachments that matches the provided errand
        id
      operationId: readErrandAttachments
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      tags:
      - Errand attachments
      summary: Create errand attachment
      description: Creates a new errand attachment based on the supplied attributes
      operationId: createErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - errandAttachment
              type: object
              properties:
                errandAttachment:
                  type: string
                  format: binary
        required: true
      responses:
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
  /{municipalityId}/{namespace}/notifications:
    get:
=======
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
  /{municipalityId}/{namespace}/errands/{errandId}/communication/sms:
    post:
>>>>>>> 4aad4eb (UF-10583: Update API)
      tags:
<<<<<<< HEAD
      - User notifications
      summary: Get notifications
      description: Get notifications for the namespace and municipality with the specified
        ownerId
      operationId: getNotificationsByOwnerId
      parameters:
<<<<<<< HEAD
      - name: namespace
        in: path
        description: Namespace
=======
<<<<<<< HEAD
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: errandId
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
=======
=======
      - Errand communication
      summary: Send sms to in context of an errand
      description: Sends a sms message to the recipient specified in the request
      operationId: sendSms
      parameters:
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsRequest"
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: ownerId
        in: query
        description: owner ID
        required: true
        schema:
          type: string
        example: 12
      responses:
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "200":
=======
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/errands/{errandId}/communication/email:
    post:
      tags:
      - Errand communication
      summary: Send email to in context of an errand
      description: Sends an email message to the recipient specified in the request
      operationId: sendEmail
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
<<<<<<< HEAD
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailRequest"
        required: true
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/errands/{errandId}/attachments:
    get:
      tags:
      - Errand attachments
      summary: Read errand attachments
      description: Fetches the errand attachments that matches the provided errand
        id
      operationId: readErrandAttachments
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      tags:
      - Errand attachments
      summary: Create errand attachment
      description: Creates a new errand attachment based on the supplied attributes
      operationId: createErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - errandAttachment
              type: object
              properties:
                errandAttachment:
                  type: string
                  format: binary
        required: true
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
  /{municipalityId}/{namespace}/notifications:
    get:
=======
  /{municipalityId}/{namespace}/errands/{errandId}/communication/sms:
    post:
>>>>>>> 4aad4eb (UF-10583: Update API)
      tags:
      - User notifications
      summary: Get notifications
      description: Get notifications for the namespace and municipality with the specified
        ownerId
      operationId: getNotificationsByOwnerId
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: ownerId
        in: query
        description: owner ID
        required: true
        schema:
          type: string
        example: 12
      responses:
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
=======
        "204":
>>>>>>> 4aad4eb (UF-10583: Update API)
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      tags:
      - User notifications
      summary: Update notification
      description: Update notifications for the namespace and municipality
      operationId: updateNotifications
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Notification"
        required: true
      responses:
<<<<<<< HEAD
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/errands/{errandId}/attachments:
    get:
      tags:
      - Errand attachments
      summary: Read errand attachments
      description: Fetches the errand attachments that matches the provided errand
        id
      operationId: readErrandAttachments
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
    post:
      tags:
      - Errand attachments
      summary: Create errand attachment
      description: Creates a new errand attachment based on the supplied attributes
      operationId: createErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - errandAttachment
              type: object
              properties:
                errandAttachment:
                  type: string
                  format: binary
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/notifications:
    get:
      tags:
      - User notifications
      summary: Get notifications
      description: Get notifications for the namespace and municipality with the specified
        ownerId
      operationId: getNotifications
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: ownerId
        in: query
        description: ownerId
        required: true
        schema:
          type: string
        example: 12
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    patch:
      tags:
      - User notifications
      summary: Update notification
      description: Update notifications for the namespace and municipality
      operationId: updateNotifications
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Notification"
        required: true
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/metadata/contactreasons/{reason}:
    get:
      tags:
      - Metadata for contact reasons
      summary: Get contact reason
      description: "Get contact reason by reason, namespace and municipality"
      operationId: getContactReason
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: reason
        in: path
        description: Reason
        required: true
        schema:
          type: string
        example: INVOICE
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "200":
          description: Successful operation
          content:
            application/json: {}
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "200":
          description: Successful operation
          content:
            application/json: {}
<<<<<<< HEAD
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    delete:
      tags:
      - Metadata for contact reasons
      summary: Delete contact reason
      description: "Delete contact reason matching namespace, municipality and reason"
      operationId: deleteContactReason
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: reason
        in: path
        description: Reason
        required: true
        schema:
          type: string
        example: INVOICE
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "200":
          description: Successful operation
          content:
            application/json: {}
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
    delete:
      tags:
        - Metadata for contact reasons
      summary: Delete contact reason
      description: "Delete contact reason matching namespace, municipality and reason"
      operationId: deleteContactReason
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: reason
          in: path
          description: Reason
          required: true
          schema:
            type: string
          example: INVOICE
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "204":
>>>>>>> 4aad4eb (UF-10583: Update API)
          description: Successful operation
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            '*/*':
              schema:
<<<<<<< HEAD
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        "404":
          description: Not found
=======
                oneOf:
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "404":
          description: Not Found
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      tags:
<<<<<<< HEAD
      - User notifications
      summary: Update notification
      description: Update notifications for the namespace and municipality
      operationId: updateNotifications
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Notification"
        required: true
      responses:
<<<<<<< HEAD
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/errands/{errandId}/attachments:
    get:
      tags:
      - Errand attachments
      summary: Read errand attachments
      description: Fetches the errand attachments that matches the provided errand
        id
      operationId: readErrandAttachments
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrandAttachmentHeader"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    post:
      tags:
      - Errand attachments
      summary: Create errand attachment
      description: Creates a new errand attachment based on the supplied attributes
      operationId: createErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - errandAttachment
              type: object
              properties:
                errandAttachment:
                  type: string
                  format: binary
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/notifications:
    get:
      tags:
      - User notifications
      summary: Get notifications
      description: Get notifications for the namespace and municipality with the specified
        ownerId
      operationId: getNotificationsByOwnerId
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: ownerId
        in: query
        description: owner ID
        required: true
        schema:
          type: string
        example: 12
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      tags:
      - User notifications
      summary: Update notification
      description: Update notifications for the namespace and municipality
      operationId: updateNotifications
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Notification"
        required: true
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "204":
          description: Successful operation
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/metadata/contactreasons/{contactReasonId}:
    get:
      tags:
      - Metadata for contact reasons
      summary: Get contact reason
      description: "Get contact reason by reason, namespace and municipality"
      operationId: getContactReason
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: contactReasonId
        in: path
        description: ContactReason ID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactReason"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - Metadata for contact reasons
      summary: Delete contact reason
      description: "Delete contact reason matching namespace, municipality and reason"
      operationId: deleteContactReason
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: contactReasonId
        in: path
        description: ContactReason ID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      responses:
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
<<<<<<< HEAD
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: Successful operation
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    patch:
      tags:
      - Metadata for contact reasons
      summary: Update contact reason
      description: "Update contact reason matching namespace, municipality and reason"
      operationId: updateContactReason
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: contactReasonId
        in: path
        description: ContactReason ID
        required: true
        schema:
          type: integer
          format: int64
        example: 123
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactReason"
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "200":
          description: Successful operation
          content:
<<<<<<< HEAD
<<<<<<< HEAD
            application/json: { }
        "500":
          description: Internal Server error
=======
=======
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "200":
          description: Successful operation
          content:
            application/json: {}
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactReason"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
        "200":
          description: Successful operation
          content:
            application/json: {}
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "200":
          description: Successful operation
          content:
            application/json: {}
        "404":
          description: Not Found
<<<<<<< HEAD
=======
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/metadata/categories/{category}:
    get:
      tags:
      - Metadata for categories
      summary: Get category
      description: Get category and connected types for the namespace and municipality
      operationId: getCategory
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: category
        in: path
        description: Name of category
        required: true
        schema:
          type: string
        example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "200":
          description: Successful operation
          content:
            application/json: {}
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
  /{municipalityId}/{namespace}/metadata/categories/{category}:
    get:
      tags:
        - Metadata for categories
      summary: Get category
      description: Get category and connected types for the namespace and municipality
      operationId: getCategory
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: category
          in: path
          description: Name of category
          required: true
          schema:
            type: string
          example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "200":
          description: Successful operation
          content:
            application/json: {}
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
<<<<<<< HEAD
=======
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful operation
          content:
            application/json: {}
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
  /{municipalityId}/{namespace}/metadata/categories/{category}:
    get:
      tags:
      - Metadata for categories
      summary: Get category
      description: Get category and connected types for the namespace and municipality
      operationId: getCategory
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: category
        in: path
        description: Name of category
        required: true
        schema:
          type: string
        example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Category"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - Metadata for categories
      summary: Delete category
      description: "Delete category matching namespace, municipality and id"
      operationId: deleteCategory
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: category
        in: path
        description: Name of category
        required: true
        schema:
          type: string
        example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "204":
          description: Successful operation
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
      - Metadata for categories
      summary: Delete category
      description: "Delete category matching namespace, municipality and id"
      operationId: deleteCategory
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: category
        in: path
        description: Name of category
        required: true
        schema:
          type: string
        example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
<<<<<<< HEAD
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: Successful operation
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    patch:
      tags:
      - Metadata for categories
      summary: Update category
      description: "Update category matching namespace, municipality and id"
      operationId: updateCategory
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: category
        in: path
        description: Name of category
        required: true
        schema:
          type: string
        example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
<<<<<<< HEAD
        "404":
          description: Not Found
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
        "500":
          description: Internal Server error
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Category"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "400":
          description: Bad Request
=======
=======
=======
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/errands/{errandId}:
    get:
      tags:
      - Errands
      summary: Read errand
      description: Fetches the errand that matches the provided id
      operationId: readErrand
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
=======
<<<<<<< HEAD
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errand"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Errand"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
<<<<<<< HEAD
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
  /{municipalityId}/{namespace}/errands/{errandId}:
    get:
=======
    delete:
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
      tags:
      - Errands
      summary: Read errand
      description: Fetches the errand that matches the provided id
      operationId: readErrand
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
<<<<<<< HEAD
=======
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server Error
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errand"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Errand"
<<<<<<< HEAD
        "400":
          description: Bad Request
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server Error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errand"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Errand"
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server Error
=======
        "400":
          description: Bad Request
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    delete:
      tags:
      - Errands
      summary: Delete errand
      description: Deletes the errand that matches the provided id
      operationId: deleteErrand
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
        "204":
          description: Successful operation
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
      responses:
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
<<<<<<< HEAD
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: Successful operation
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    patch:
      tags:
      - Errands
      summary: Update errand
      description: Updates the errand matching provided id with the supplied attributes
      operationId: updateErrand
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Errand"
        required: true
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errand"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errand"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Errand"
<<<<<<< HEAD
>>>>>>> 7a702cb (UF-10584: Add logic)
        "400":
          description: Bad request
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errand"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Errand"
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{id}/notes/{noteId}:
    get:
      tags:
        - Errand notes
      summary: Read errand note
      description: Fetches the errand note that matches the provided errand id and
        note id
      operationId: readErrandNote
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: noteId
          in: path
          description: Errand note id
          required: true
          schema:
            type: string
          example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
        - Errand notes
      summary: Delete errand note
      description: Deletes the errand note that matches the provided errand id and
        note id
      operationId: deleteErrandNote
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: noteId
          in: path
          description: Errand note id
          required: true
          schema:
            type: string
          example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
=======
<<<<<<< HEAD
        "204":
          description: Successful operation
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      tags:
        - Errand notes
      summary: Update errand note
      description: Updates the errand note matching provided errand id and note id
        with the supplied attributes
      operationId: updateErrandNote
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: noteId
          in: path
          description: Errand note id
          required: true
          schema:
            type: string
          example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateErrandNoteRequest"
        required: true
      responses:
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
                $ref: "#/components/schemas/Problem"
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not found
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errand"
            application/problem+json:
              schema:
<<<<<<< HEAD
                $ref: "#/components/schemas/Errand"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not found
=======
=======
<<<<<<< HEAD
                $ref: "#/components/schemas/ErrandNote"
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
<<<<<<< HEAD
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
                $ref: "#/components/schemas/Errand"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/errands/{errandId}/parameters:
    get:
      tags:
      - Errand Parameters
      summary: Find errand parameters
      description: Find the errand parameters that matches the provided attributes
      operationId: findErrandParameters
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Parameter"
    patch:
      tags:
      - Errand Parameters
      summary: Update errand parameters
      description: Creates a new errand parameter based on the supplied attributes
      operationId: updateErrandParameters
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Parameter"
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "404":
          description: Not found
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
        "404":
          description: Not found
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
=======
        "404":
          description: Not found
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not found
=======
        "500":
          description: Internal Server error
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Parameter"
  /{municipalityId}/{namespace}/errands/{errandId}/parameters/{parameterKey}:
    get:
      tags:
      - Errand Parameters
      summary: Read errand parameter
      description: Fetches the errand parameter that matches the provided errand id
        and parameter id
      operationId: readErrandParameter
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: parameterKey
        in: path
        description: Errand parameter key
        required: true
        schema:
          type: string
        example: propertyInfo
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
<<<<<<< HEAD
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                type: array
                items:
                  type: string
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    delete:
      tags:
      - Errand Parameters
      summary: Delete errand parameter
      description: Deletes the errand parameter that matches the provided errand id
        and parameter id
      operationId: deleteErrandParameter
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: parameterKey
        in: path
        description: Errand parameter key
        required: true
        schema:
          type: string
        example: propertyInfo
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
=======
>>>>>>> fd310fe (UF-10583: Update API)
    delete:
      tags:
      - Errand Parameters
      summary: Delete errand parameter
      description: Deletes the errand parameter that matches the provided errand id
        and parameter id
      operationId: deleteErrandParameter
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: parameterKey
        in: path
        description: Errand parameter key
        required: true
        schema:
          type: string
        example: propertyInfo
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
        "204":
          description: Successful operation
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not Found
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
<<<<<<< HEAD
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "204":
          description: Successful operation
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    patch:
      tags:
      - Errand Parameters
      summary: Update errand parameter
      description: Updates the errand parameter matching provided errand id and parameter
        id with the supplied attributes
      operationId: updateErrandParameter
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: parameterKey
        in: path
        description: Errand parameter key
        required: true
        schema:
          type: string
        example: propertyInfo
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "404":
          description: Not found
<<<<<<< HEAD
=======
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
        "404":
          description: Not found
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
=======
        "404":
          description: Not found
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not found
=======
        "500":
          description: Internal Server error
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parameter"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Parameter"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not found
=======
        "500":
          description: Internal Server error
>>>>>>> 05cb6da (UF-10584: Add logic)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
  /{municipalityId}/{namespace}/errands/{errandId}/notes/{noteId}:
    get:
      tags:
      - Errand notes
      summary: Read errand note
      description: Fetches the errand note that matches the provided errand id and
        note id
      operationId: readErrandNote
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
<<<<<<< HEAD
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    delete:
      tags:
      - Errand notes
      summary: Delete errand note
      description: Deletes the errand note that matches the provided errand id and
        note id
      operationId: deleteErrandNote
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "204":
          description: Successful operation
=======
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
=======
        "404":
          description: Not found
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    patch:
      tags:
      - Errand notes
<<<<<<< HEAD
      summary: Update errand note
      description: Updates the errand note matching provided errand id and note id
        with the supplied attributes
      operationId: updateErrandNote
=======
      summary: Delete errand note
      description: Deletes the errand note that matches the provided errand id and
        note id
      operationId: deleteErrandNote
>>>>>>> 4aad4eb (UF-10583: Update API)
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
<<<<<<< HEAD
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateErrandNoteRequest"
        required: true
      responses:
<<<<<<< HEAD
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server Error
=======
        "404":
          description: Not Found
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
      responses:
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
<<<<<<< HEAD
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
        "404":
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
    delete:
      tags:
      - Errand notes
      summary: Delete errand note
      description: Deletes the errand note that matches the provided errand id and
        note id
      operationId: deleteErrandNote
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
<<<<<<< HEAD
        "404":
=======
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
  /{municipalityId}/{namespace}/errands/{errandId}/notes/{noteId}:
    get:
      tags:
      - Errand notes
      summary: Read errand note
      description: Fetches the errand note that matches the provided errand id and
        note id
      operationId: readErrandNote
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
>>>>>>> fd310fe (UF-10583: Update API)
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server Error
=======
        "404":
          description: Not Found
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
    patch:
=======
=======
<<<<<<< HEAD
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
    patch:
>>>>>>> 4aad4eb (UF-10583: Update API)
      tags:
      - Errand notes
      summary: Update errand note
      description: Updates the errand note matching provided errand id and note id
        with the supplied attributes
      operationId: updateErrandNote
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateErrandNoteRequest"
        required: true
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 416de18 (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "404":
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "404":
>>>>>>> 4aad4eb (UF-10583: Update API)
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
<<<<<<< HEAD
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
  /{municipalityId}/{namespace}/metadata:
    get:
      tags:
      - Metadata
      summary: Get all metadata
      description: Get all metadata for provided namespace and municipality
      operationId: getAll
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 416de18 (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataResponse"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MetadataResponse"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
  /{municipalityId}/{namespace}/metadata/statuses/{status}:
    get:
      tags:
      - Metadata for statuses
      summary: Get status
      description: "Get status matching sent in namespace, municipality and status"
      operationId: getStatus
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: status
        in: path
        description: Name of status
        required: true
        schema:
          type: string
        example: NEW
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - Metadata for statuses
      summary: Delete status
      description: "Delete status matching namespace, municipality and status"
      operationId: deleteStatus
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: status
        in: path
        description: Name of status
        required: true
        schema:
          type: string
        example: PRIVATE
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/metadata/roles/{role}:
    get:
      tags:
      - Metadata for roles
      summary: Get role
      description: "Get role matching sent in namespace, municipality and role"
      operationId: getRole
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: role
        in: path
        description: Name of role
        required: true
        schema:
          type: string
        example: ROLE-1
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - Metadata for roles
      summary: Delete role
      description: "Delete role matching namespace, municipality and role"
      operationId: deleteRole
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: role
        in: path
        description: Name of role
        required: true
        schema:
          type: string
        example: ROLE-1
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/metadata/external-id-types/{externalIdType}:
    get:
      tags:
      - Metadata for externalid types
      summary: Get externalIdType
      description: "Get externalIdType matching sent in namespace, municipality and\
        \ externalIdType"
      operationId: getExternalIdType
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: externalIdType
        in: path
        description: Name of externalid type
        required: true
        schema:
          type: string
        example: PRIVATE
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalIdType"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - Metadata for externalid types
      summary: Delete externalIdType
      description: "Delete externalid type matching namespace, municipality and externalIdType"
      operationId: deleteExternalIdType
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: externalIdType
        in: path
        description: Name of externalIdType
        required: true
        schema:
          type: string
        example: PRIVATE
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/metadata/categories/{category}/types:
    get:
      tags:
      - Metadata for categories
      summary: Get types connected to category
      description: "Get all types for the namespace, municipality and category"
      operationId: getCategoryTypes
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: category
        in: path
        description: Name of category
        required: true
        schema:
          type: string
        example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Type"
  /{municipalityId}/{namespace}/errands/{errandId}/time-measure:
    get:
      tags:
      - Time measures
      operationId: getErrandTimeMeasure
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "200":
          description: Successful operation
          content:
            application/json: {}
  /{municipalityId}/{namespace}/errands/{errandId}/revisions:
    get:
      tags:
      - Revisions
      summary: Read errand revisions
      description: Returns all existing revisions for the errand that matches the
        provided id
      operationId: getErrandRevisions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/revisions/difference:
    get:
      tags:
      - Revisions
      summary: Compare differences between two revision versions of an errand
      description: Returns the differences between the source and target revision
        for the provided errand id
      operationId: getErrandDiffByVersions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: source
        in: query
        description: Source version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 0
      - name: target
        in: query
        description: Target version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/notifications/{notificationId}:
    get:
      tags:
      - User notifications
      summary: Get notifications
      description: Get a specific notification for the namespace and municipality
      operationId: getNotification
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: notificationId
        in: path
        description: notification ID
        required: true
        schema:
          type: string
        example: 12
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notification"
        "500":
          description: Internal Server error
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
    delete:
      tags:
<<<<<<< HEAD
      - User notifications
=======
<<<<<<< HEAD
        - User notifications
>>>>>>> fd310fe (UF-10583: Update API)
      summary: Delete notification
      description: Delete notification for the namespace and municipality
      operationId: deleteNotification
      parameters:
<<<<<<< HEAD
=======
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: notificationId
          in: path
          description: Notification id
          required: true
          schema:
            type: string
=======
      - Errand notes
      summary: Delete errand note
      description: Deletes the errand note that matches the provided errand id and
        note id
      operationId: deleteErrandNote
      parameters:
>>>>>>> fd310fe (UF-10583: Update API)
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        description: Municipality ID
=======
        description: Municipality id
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        description: Municipality ID
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        description: Municipality id
>>>>>>> fd310fe (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        description: Errand ID
=======
        description: Errand id
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        description: Errand ID
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        description: Errand id
>>>>>>> fd310fe (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
      - name: notificationId
        in: path
<<<<<<< HEAD
<<<<<<< HEAD
        description: Notification ID
=======
        description: Notification id
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        description: Notification ID
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        required: true
        schema:
          type: string
=======
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "404":
<<<<<<< HEAD
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
=======
          description: Not Found
>>>>>>> fd310fe (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      tags:
      - Errand notes
      summary: Update errand note
      description: Updates the errand note matching provided errand id and note id
        with the supplied attributes
      operationId: updateErrandNote
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateErrandNoteRequest"
        required: true
      responses:
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrandNote"
<<<<<<< HEAD
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/metadata:
    get:
      tags:
      - Metadata
      summary: Get all metadata
      description: Get all metadata for provided namespace and municipality
      operationId: getAll
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataResponse"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MetadataResponse"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/metadata/statuses/{status}:
    get:
      tags:
      - Metadata for statuses
      summary: Get status
      description: "Get status matching sent in namespace, municipality and status"
      operationId: getStatus
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: status
        in: path
        description: Name of status
        required: true
        schema:
          type: string
        example: NEW
      responses:
        "500":
          description: Internal Server error
<<<<<<< HEAD
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Status"
<<<<<<< HEAD
<<<<<<< HEAD
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
      - Metadata for statuses
      summary: Delete status
      description: "Delete status matching namespace, municipality and status"
      operationId: deleteStatus
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: status
        in: path
        description: Name of status
        required: true
        schema:
          type: string
        example: PRIVATE
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/metadata/roles/{role}:
    get:
      tags:
      - Metadata for roles
      summary: Get role
      description: "Get role matching sent in namespace, municipality and role"
      operationId: getRole
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: role
        in: path
        description: Name of role
        required: true
        schema:
          type: string
        example: ROLE-1
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Role"
<<<<<<< HEAD
<<<<<<< HEAD
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
      - Metadata for roles
      summary: Delete role
      description: "Delete role matching namespace, municipality and role"
      operationId: deleteRole
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: role
        in: path
        description: Name of role
        required: true
        schema:
          type: string
        example: ROLE-1
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
  /{municipalityId}/{namespace}/metadata/external-id-types/{externalIdType}:
    get:
      tags:
      - Metadata for externalid types
      summary: Get externalIdType
      description: "Get externalIdType matching sent in namespace, municipality and\
        \ externalIdType"
      operationId: getExternalIdType
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: externalIdType
        in: path
        description: Name of externalid type
        required: true
        schema:
          type: string
        example: PRIVATE
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalIdType"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ExternalIdType"
<<<<<<< HEAD
<<<<<<< HEAD
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
      - Metadata for externalid types
      summary: Delete externalIdType
      description: "Delete externalid type matching namespace, municipality and externalIdType"
      operationId: deleteExternalIdType
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: externalIdType
        in: path
        description: Name of externalIdType
        required: true
        schema:
          type: string
        example: PRIVATE
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
        "404":
          description: Not Found
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/metadata/categories/{category}/types:
    get:
      tags:
      - Metadata for categories
      summary: Get types connected to category
      description: "Get all types for the namespace, municipality and category"
      operationId: getCategoryTypes
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: category
        in: path
        description: Name of category
        required: true
        schema:
          type: string
        example: KSK_SERVICE_CENTER_SALARY_AND_PENSION
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Type"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Type"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/errands/{errandId}/time-measure:
    get:
      tags:
      - Time measures
      operationId: getErrandTimeMeasure
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
<<<<<<< HEAD
=======
        "200":
          description: Successful operation
          content:
            application/json: {}
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful operation
          content:
            application/json: {}
  /{municipalityId}/{namespace}/errands/{errandId}/revisions:
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
  /{municipalityId}/{namespace}/errands/{errandId}/revisions:
    get:
      tags:
      - Revisions
      summary: Read errand revisions
      description: Returns all existing revisions for the errand that matches the
        provided id
      operationId: getErrandRevisions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{errandId}/revisions/difference:
    get:
      tags:
      - Revisions
      summary: Compare differences between two revision versions of an errand
      description: Returns the differences between the source and target revision
        for the provided errand id
      operationId: getErrandDiffByVersions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: source
        in: query
        description: Source version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 0
      - name: target
        in: query
        description: Target version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{errandId}/notifications/{notificationId}:
    get:
      tags:
      - User notifications
      summary: Get notifications
      description: Get a specific notification for the namespace and municipality
      operationId: getNotification
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: notificationId
        in: path
        description: notificationId
        required: true
        schema:
          type: string
        example: 12
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - User notifications
      summary: Delete notification
      description: Delete notification for the namespace and municipality
      operationId: deleteNotification
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: notificationId
        in: path
        description: Notification id
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/errands/{errandId}/notes/{noteId}/revisions:
    get:
      tags:
      - Revisions
      summary: Read note revisions
      description: Returns all existing revisions for the errand note that matches
        the provided errand id and note id
      operationId: getErrandNoteRevisions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 22a57c09-47ca-45bf-ab02-819011c6fd8d
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{errandId}/notes/{noteId}/revisions/difference:
    get:
      tags:
      - Revisions
      summary: Compare differences between two revision versions of an errand note
      description: Returns the differences between the source and target revision
        for the provided errand id and note id
      operationId: getErrandNoteDiffByVersions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 22a57c09-47ca-45bf-ab02-819011c6fd8d
      - name: source
        in: query
        description: Source version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 0
      - name: target
        in: query
        description: Target version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{errandId}/events:
    get:
      tags:
      - Errand events
      summary: Read errand events
      description: Returns all existing events for the errand that matches the provided
        id
      operationId: getErrandEvents
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageEvent"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/PageEvent"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{errandId}/communication:
>>>>>>> 4aad4eb (UF-10583: Update API)
    get:
      tags:
      - Revisions
      summary: Read errand revisions
      description: Returns all existing revisions for the errand that matches the
        provided id
      operationId: getErrandRevisions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not found
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
        "500":
          description: Internal Server error
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
=======
=======
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
            application/problem+json:
              schema:
                type: array
                items:
<<<<<<< HEAD
                  $ref: "#/components/schemas/Revision"
<<<<<<< HEAD
>>>>>>> 7a702cb (UF-10584: Add logic)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
<<<<<<< HEAD
                oneOf:
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{id}/revisions/difference:
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
  /{municipalityId}/{namespace}/errands/{errandId}/revisions/difference:
    get:
      tags:
      - Revisions
      summary: Compare differences between two revision versions of an errand
      description: Returns the differences between the source and target revision
        for the provided errand id
      operationId: getErrandDiffByVersions
=======
                  $ref: "#/components/schemas/Communication"
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationID}/attachments/{attachmentID}/streamed:
    get:
      tags:
      - Errand communication
      summary: Get a streamed communication attachment.
      description: Fetches the communication attachment that matches the provided
        id in a streamed manner
      operationId: getMessageAttachmentStreamed
>>>>>>> 4aad4eb (UF-10583: Update API)
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
<<<<<<< HEAD
=======
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: communicationID
        in: path
        description: communication id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentID
>>>>>>> 4aad4eb (UF-10583: Update API)
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: source
        in: query
        description: Source version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 0
      - name: target
        in: query
        description: Target version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not found
>>>>>>> fd310fe (UF-10583: Update API)
=======
        "404":
          description: Not Found
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
  /{municipalityId}/{namespace}/errands/{errandId}/notes/{noteId}/revisions:
=======
=======
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
<<<<<<< HEAD
>>>>>>> 7a702cb (UF-10584: Add logic)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
<<<<<<< HEAD
                oneOf:
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{id}/notes/{noteId}/revisions:
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
  /{municipalityId}/{namespace}/errands/{errandId}/notifications/{notificationId}:
    get:
      tags:
      - User notifications
      summary: Get notifications
      description: Get a specific notification for the namespace and municipality
      operationId: getNotification
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: notificationId
        in: path
        description: notification ID
        required: true
        schema:
          type: string
        example: 12
      responses:
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notification"
>>>>>>> 416de18 (UF-10583: Update API)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
      - User notifications
      summary: Delete notification
      description: Delete notification for the namespace and municipality
      operationId: deleteNotification
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: notificationId
        in: path
        description: Notification ID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/notes/{noteId}/revisions:
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
                type: array
                items:
                  $ref: "#/components/schemas/Communication"
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/attachments/{attachmentId}/streamed:
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
    get:
      tags:
      - Revisions
      summary: Read note revisions
      description: Returns all existing revisions for the errand note that matches
        the provided errand id and note id
      operationId: getErrandNoteRevisions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 22a57c09-47ca-45bf-ab02-819011c6fd8d
      responses:
<<<<<<< HEAD
=======
=======
      - name: communicationId
        in: path
        description: communication ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Message attachment ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
=======
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Revision"
<<<<<<< HEAD
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/notes/{noteId}/revisions/difference:
    get:
      tags:
      - Revisions
      summary: Compare differences between two revision versions of an errand note
      description: Returns the differences between the source and target revision
        for the provided errand id and note id
      operationId: getErrandNoteDiffByVersions
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: noteId
        in: path
        description: Errand note id
        required: true
        schema:
          type: string
        example: 22a57c09-47ca-45bf-ab02-819011c6fd8d
      - name: source
        in: query
        description: Source version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 0
      - name: target
        in: query
        description: Target version to compare
        required: true
        schema:
          type: integer
          format: int32
        example: 1
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifferenceResponse"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/events:
    get:
      tags:
      - Errand events
      summary: Read errand events
      description: Returns all existing events for the errand that matches the provided
        id
      operationId: getErrandEvents
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageEvent"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageEvent"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/PageEvent"
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
        "500":
          description: Internal Server error
<<<<<<< HEAD
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
  /{municipalityId}/{namespace}/errands/{id}/attachments/{attachmentId}:
    get:
      tags:
        - Errand attachments
      summary: Read errand attachment
      description: Fetches the errand attachment that matches the provided errand
        id and attachment id
      operationId: readErrandAttachment
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: attachmentId
          in: path
          description: Errand attachment id
          required: true
          schema:
            type: string
          example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "200":
          description: Successful Operation
  /{municipalityId}/{namespace}/errands/{errandId}/attachments/{attachmentId}:
    get:
      tags:
      - Errand attachments
      summary: Read errand attachment
      description: Fetches the errand attachment that matches the provided errand
        id and attachment id
      operationId: readErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Errand attachment id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
                $ref: "#/components/schemas/Problem"
        "404":
          description: Not found
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
    delete:
      tags:
        - Errand attachments
      summary: Delete errand attachment
      description: Deletes the errand attachment that matches the provided errand
        id and attachment id
      operationId: deleteErrandAttachment
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: attachmentId
          in: path
          description: Errand attachment id
          required: true
          schema:
            type: string
          example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
=======
        "404":
          description: Not found
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "200":
=======
<<<<<<< HEAD
        "204":
>>>>>>> fd310fe (UF-10583: Update API)
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageEvent"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/PageEvent"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
=======
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not found
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
  /{municipalityId}/{namespace}/errands/{errandId}/timeMeasure:
    get:
      tags:
        - Time measures
      operationId: getErrandTimeMeasure
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: errandId
          in: path
          description: Errand id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
<<<<<<< HEAD
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 416de18 (UF-10583: Update API)
  /{municipalityId}/{namespace}/errands/{errandId}/communication:
    get:
      tags:
      - Errand communication
      description: Get all communications for an errand.
      operationId: getCommunications
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "200":
          description: OK - Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Communication"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Communication"
<<<<<<< HEAD
<<<<<<< HEAD
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/attachments/{attachmentId}/streamed:
    get:
      tags:
<<<<<<< HEAD
      - Errand communication
=======
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationID}/attachments/{attachmentID}/streamed:
=======
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/attachments/{attachmentId}/streamed:
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
    get:
      tags:
<<<<<<< HEAD
        - MessageAttachments
=======
      - Errand communication
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
=======
      - Errand communication
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
      summary: Get a streamed communication attachment.
      description: Fetches the communication attachment that matches the provided
        id in a streamed manner
      operationId: getMessageAttachmentStreamed
=======
  /{municipalityId}/{namespace}/errands/{errandId}/communication:
    get:
      tags:
      - Errand communication
      description: Get all communications for an errand.
      operationId: getCommunications
>>>>>>> 4aad4eb (UF-10583: Update API)
      parameters:
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\.|\\-]+"
            type: string
          example: my.namespace
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: attachmentID
          in: path
          description: Message attachment id
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
=======
>>>>>>> fd310fe (UF-10583: Update API)
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
<<<<<<< HEAD
<<<<<<< HEAD
        description: Municipality ID
=======
        description: Municipality id
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
        description: Municipality id
>>>>>>> fd310fe (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
<<<<<<< HEAD
      - name: communicationId
        in: path
        description: communication ID
=======
      - name: communicationID
        in: path
        description: communication id
>>>>>>> fd310fe (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
      - name: attachmentId
        in: path
        description: Message attachment ID
=======
      - name: attachmentID
        in: path
        description: Message attachment id
>>>>>>> fd310fe (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
      responses:
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "200":
          description: OK - Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Communication"
  /{municipalityId}/{namespace}/errands/{errandId}/communication/{communicationId}/attachments/{attachmentId}/streamed:
    get:
      tags:
      - Errand communication
      summary: Get a streamed communication attachment.
      description: Fetches the communication attachment that matches the provided
        id in a streamed manner
      operationId: getMessageAttachmentStreamed
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: communicationId
        in: path
        description: communication ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Message attachment ID
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "200":
          description: Successful Operation
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
<<<<<<< HEAD
  /{municipalityId}/{namespace}/errands/{errandId}/attachments/{attachmentId}:
    get:
      tags:
      - Errand attachments
      summary: Read errand attachment
      description: Fetches the errand attachment that matches the provided errand
        id and attachment id
      operationId: readErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
      - name: attachmentId
        in: path
        description: Errand attachment id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not Found
=======
        "500":
          description: Internal Server Error
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
        "500":
          description: Internal Server Error
>>>>>>> 4aad4eb (UF-10583: Update API)
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
        "200":
          description: Successful Operation
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
        "200":
          description: Successful Operation
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful Operation
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
    delete:
      tags:
      - Errand attachments
      summary: Delete errand attachment
      description: Deletes the errand attachment that matches the provided errand
        id and attachment id
      operationId: deleteErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
=======
      - name: communicationId
        in: path
        description: communication ID
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
<<<<<<< HEAD
        description: Errand attachment id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful operation
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/errands/{errandId}/attachments/{attachmentId}/streamed:
    get:
      tags:
      - Errand attachments
      summary: Get a streamed attachment.
      description: Fetches the attachment that matches the provided id in a streamed
        manner
      operationId: getMessageAttachmentStreamed_1
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
=======
        description: Message attachment ID
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Errand attachment ID
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
    delete:
      tags:
      - Errand attachments
      summary: Delete errand attachment
      description: Deletes the errand attachment that matches the provided errand
        id and attachment id
      operationId: deleteErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Errand attachment id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
>>>>>>> 05cb6da (UF-10584: Add logic)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "204":
          description: Successful operation
<<<<<<< HEAD
=======
        "204":
          description: Successful operation
>>>>>>> 4aad4eb (UF-10583: Update API)
  /{municipalityId}/{namespace}/communication/attachments/{attachmentId}/streamed:
    get:
      tags:
      - MessageAttachments
      summary: Get a streamed communication attachment.
      description: Fetches the communication attachment that matches the provided
        id in a streamed manner
<<<<<<< HEAD
=======
  /{municipalityId}/{namespace}/errands/{errandId}/attachments/{attachmentId}/streamed:
    get:
      tags:
      - Errand attachments
      summary: Get a streamed attachment.
      description: Fetches the attachment that matches the provided id in a streamed
        manner
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
      operationId: getMessageAttachmentStreamed_1
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
<<<<<<< HEAD
<<<<<<< HEAD
        description: Municipality id
=======
        description: Municipality ID
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
        description: Municipality id
>>>>>>> 4aad4eb (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: 2281
<<<<<<< HEAD
<<<<<<< HEAD
      - name: attachmentId
        in: path
        description: Message attachment ID
=======
      - name: errandId
        in: path
        description: Errand id
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
      - name: attachmentId
        in: path
        description: Message attachment ID
>>>>>>> 4aad4eb (UF-10583: Update API)
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
<<<<<<< HEAD
<<<<<<< HEAD
      responses:
<<<<<<< HEAD
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
      responses:
>>>>>>> 4aad4eb (UF-10583: Update API)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
        "200":
          description: Successful Operation
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
        "204":
          description: Successful operation
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
      - name: attachmentId
        in: path
        description: Errand attachment ID
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
        "200":
          description: Successful Operation
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 416de18 (UF-10583: Update API)
  /{municipalityId}/{namespace}/errands/{errandId}/attachments/{attachmentId}:
    get:
      tags:
      - Errand attachments
      summary: Read errand attachment
      description: Fetches the errand attachment that matches the provided errand
        id and attachment id
      operationId: readErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Errand attachment id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
    delete:
      tags:
      - Errand attachments
      summary: Delete errand attachment
      description: Deletes the errand attachment that matches the provided errand
        id and attachment id
      operationId: deleteErrandAttachment
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality id
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Errand attachment id
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "204":
          description: Successful operation
  /{municipalityId}/{namespace}/errands/{errandId}/attachments/{attachmentId}/streamed:
    get:
      tags:
      - Errand attachments
      summary: Get a streamed attachment.
      description: Fetches the attachment that matches the provided id in a streamed
        manner
      operationId: getMessageAttachmentStreamed_1
      parameters:
      - name: namespace
        in: path
        description: Namespace
        required: true
        schema:
          pattern: "[\\w|\\.|\\-]+"
          type: string
        example: my.namespace
      - name: municipalityId
        in: path
        description: Municipality ID
        required: true
        schema:
          type: string
        example: 2281
      - name: errandId
        in: path
        description: Errand id
        required: true
        schema:
          type: string
        example: b82bd8ac-1507-4d9a-958d-369261eecc15
      - name: attachmentId
        in: path
        description: Errand attachment ID
        required: true
        schema:
          type: string
        example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
        "200":
          description: Successful Operation
=======
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
        "200":
          description: Successful Operation
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        "204":
          description: Successful operation
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
  /namespace-configs:
    get:
      tags:
      - Configuration for namespace
      summary: "Read all namespace configurations, optionally filterered by municipalityId"
      description: Fetches an optionally filtered list of namespace configurations
      operationId: readAllNamespaceConfigs
      parameters:
      - name: municipalityId
        in: query
        description: Municipality id
        required: false
        schema:
          type: string
        example: 2281
      responses:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
=======
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
<<<<<<< HEAD
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
<<<<<<< HEAD
=======
=======
>>>>>>> c8b56ec (UF-10368: Acted on review comnents)
>>>>>>> 5f321e0 (UF-10368: Acted on review comnents)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
>>>>>>> 416de18 (UF-10583: Update API)
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NamespaceConfig"
<<<<<<< HEAD
=======
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NamespaceConfig"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
=======
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Problem"
                - $ref: "#/components/schemas/ConstraintViolationProblem"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4aad4eb (UF-10583: Update API)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
>>>>>>> 05cb6da (UF-10584: Add logic)
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 7a702cb (UF-10584: Add logic)
=======
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
  /api-docs:
    get:
      tags:
      - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    NamespaceConfig:
      required:
      - displayName
      - shortCode
      type: object
      properties:
        namespace:
          type: string
          description: Namespace
          readOnly: true
          example: CONTACTCENTER
        municipalityId:
          type: string
          description: Municipality connected to the namespace
          readOnly: true
          example: "2281"
        displayName:
          type: string
          description: Displayname for the namespace
          example: Kontaktcenter
        shortCode:
          type: string
          description: Prefix for errand numbers in this namespace
          example: KC
        created:
          type: string
          description: Timestamp when the configuration was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the configuration was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Namespace configuration model
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        type:
          type: string
          format: uri
        status:
          $ref: "#/components/schemas/StatusType"
        violations:
          type: array
          items:
            $ref: "#/components/schemas/Violation"
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    Label:
      required:
      - classification
      - name
      type: object
      properties:
        classification:
          type: string
          description: Label classification
          example: subtype
        displayName:
          type: string
          description: Display name for the label
          example: Nyckelkort
        name:
          type: string
          description: Name for the label
          example: keycard
        labels:
          type: array
          items:
            $ref: "#/components/schemas/Label"
      description: Label model
    EmailIntegration:
      required:
      - enabled
      - statusForNew
      type: object
      properties:
        enabled:
          type: boolean
          description: If set to true emails will be fetched
        errandClosedEmailSender:
          type: string
          description: Email sender if incoming mail is rejected
          nullable: true
          example: noreply@sundsvall.se
        errandClosedEmailTemplate:
          type: string
          description: Message that will be sent when incoming mail is rejected
          nullable: true
          example: Errand is closed. Please open a new errand.
        errandNewEmailSender:
          type: string
          description: Email sender if incoming mail results in new errand
          nullable: true
          example: test@sundsvall.se
        errandNewEmailTemplate:
          type: string
          description: Message that will be sent when new errand is created
          nullable: true
          example: New errand is created.
        daysOfInactivityBeforeReject:
          type: integer
          description: Number of days before incoming mail is rejected. Measured from
            when the errand was last touched. Rejection can only occur if status on
            errand equals 'inactiveStatus'.
          format: int32
          nullable: true
          example: 5
        statusForNew:
          type: string
          description: Status set on errand when email results in a new errand
          example: NEW
        triggerStatusChangeOn:
          type: string
          description: Status on errand that will trigger a status change when email
            refers to an existing errand
          nullable: true
          example: SOLVED
        statusChangeTo:
          type: string
          description: Status that will be set on errand if status change is triggered.
            Can only be null if 'triggerStatusChangeOn' is null.
          nullable: true
          example: OPEN
        inactiveStatus:
          type: string
          description: "Status of an inactive errand. This value relates to property\
            \ 'daysOfInactivityBeforeReject'. If set to null, no rejection mail will\
            \ be sent"
          nullable: true
          example: SOLVED
        addSenderAsStakeholder:
          type: boolean
          description: If true sender is added as stakeholder
          nullable: true
          example: false
        stakeholderRole:
          type: string
          description: Role set on stakeholder.
          nullable: true
          example: APPLICANT
        errandChannel:
          type: string
          description: Channel set on created errands
          nullable: true
          example: EMAIL
        created:
          type: string
          description: Timestamp when the configuration was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the configuration was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Email integration config model
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
    Notification:
      required:
        - description
        - ownerFullName
        - ownerId
        - type
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the notification
          example: 123e4567-e89b-12d3-a456-426614174000
        created:
          type: string
          description: Timestamp when the notification was created
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the notification was last modified
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        ownerFullName:
          type: string
          description: Name of the owner of the notification
          example: Test Testorsson
        ownerId:
          type: string
          description: Owner id of the notification
          example: AD01
        createdBy:
          type: string
          description: User who created the notification
          example: TestUser
        createdByFullName:
          type: string
          description: Full name of the user who created the notification
          readOnly: true
          example: Test Testorsson
        type:
          type: string
          description: Type of the notification
          example: CREATE
        description:
          type: string
          description: Description of the notification
          example: Some description of the notification
        content:
          type: string
          description: Content of the notification
          example: Some content of the notification
        expires:
          type: string
          description: Timestamp when the notification expires
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        acknowledged:
          type: boolean
          description: Acknowledged status of the notification
          example: true
        errandId:
          type: string
          description: Errand id of the notification
          example: f0882f1d-06bc-47fd-b017-1d8307f5ce95
        errandNumber:
          type: string
          description: Errand number of the notification
          readOnly: true
          example: PRH-2022-000001
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    Status:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name for the status
          example: statusname
        created:
          type: string
          description: Timestamp when the status was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the status was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Status model
    Role:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name for the role. Used as key
          example: roleName
        displayName:
          type: string
          description: Display name for the role
          nullable: true
          example: Role name
        created:
          type: string
          description: Timestamp when the role was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the role was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Role model
    ExternalIdType:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name for the external id type
          example: PRIVATE
        created:
          type: string
          description: Timestamp when the external id type was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the external id type was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: ExternalIdType model
    ContactReason:
      required:
      - reason
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int64
          readOnly: true
          example: 123
        reason:
          type: string
          description: Reason for contact
          example: Segt internet
        created:
          type: string
          description: Timestamp when the contact reason was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the contact reason was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Contact reason model
    Category:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name for the category
          example: categoryname
        displayName:
          type: string
          description: Displayname for the category
          example: Displayed name
        types:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Type"
        created:
          type: string
          description: Timestamp when the category was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the category was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Category model
    Type:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name for the type
          example: typename
        displayName:
          type: string
          description: Displayname for the type
          example: Displayed name
        escalationEmail:
          type: string
          description: Email for where to escalate the errand if needed
          example: escalationgroup@sesamestreet.com
        created:
          type: string
          description: Timestamp when type was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when type was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Type model
    Classification:
      required:
      - category
      - type
      type: object
      properties:
        category:
          type: string
          description: Category for the errand
          example: SUPPORT_CASE
        type:
          type: string
          description: Type of errand
          example: OTHER_ISSUES
      description: Classification model
    ContactChannel:
      type: object
      properties:
        type:
          type: string
          description: Type of channel. Defines how value is interpreted
          example: Email
        value:
          type: string
          description: Value for Contact channel
          example: arthur.dent@earth.com
      description: Contact channel model
    Errand:
      required:
      - classification
      - priority
      - reporterUserId
      - status
      - title
      type: object
      properties:
        id:
          type: string
          description: Unique id for the errand
          readOnly: true
          example: f0882f1d-06bc-47fd-b017-1d8307f5ce95
        errandNumber:
          type: string
          description: Unique number for the errand
          readOnly: true
          example: KC-23010001
        title:
          type: string
          description: Title for the errand
          example: Title for the errand
        priority:
          $ref: "#/components/schemas/Priority"
        stakeholders:
          type: array
          items:
            $ref: "#/components/schemas/Stakeholder"
        externalTags:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/ExternalTag"
        parameters:
          type: array
          description: Parameters for the errand
          items:
            $ref: "#/components/schemas/Parameter"
        classification:
          $ref: "#/components/schemas/Classification"
        status:
          type: string
          description: Status for the errand
          example: NEW_CASE
        resolution:
          type: string
          description: Resolution status for closed errands. Value can be set to anything
          example: FIXED
        description:
          type: string
          description: Errand description text
          example: Order cake for everyone
        channel:
          maxLength: 255
          minLength: 0
          type: string
          description: The channel from which the errand originated
          example: THE_CHANNEL
        reporterUserId:
          type: string
          description: User id for the person which has created the errand
          example: joe01doe
        assignedUserId:
          type: string
          description: Id for the user which currently is assigned to the errand if
            a user is assigned
          example: joe01doe
        assignedGroupId:
          type: string
          description: Id for the group which is currently assigned to the errand
            if a group is assigned
          example: hardware support
        escalationEmail:
          type: string
          description: Email address used for escalation of errand
          example: joe.doe@email.com
        contactReason:
          type: string
          description: Contact reason for the errand
          example: The printer is not working
        contactReasonDescription:
          maxLength: 4096
          minLength: 0
          type: string
          description: Contact reason description for the errand
          example: The printer is not working since the power cord is missing
        suspension:
          $ref: "#/components/schemas/Suspension"
        businessRelated:
          type: boolean
          description: Flag to indicate if the errand is business related
          example: true
        labels:
          type: array
          description: List of labels for the errand
          example:
          - label1
          - label2
          items:
            type: string
            description: List of labels for the errand
            example: "[\"label1\",\"label2\"]"
        created:
          type: string
          description: Timestamp when errand was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when errand was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        touched:
          type: string
          description: Timestamp when errand was last touched (created or modified)
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
      description: Errand model
    ExternalTag:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          description: Key for external tag
          example: caseid
        value:
          type: string
          description: Value for external tag
          example: 8849-2848
      description: External tag model
    Parameter:
      required:
      - key
      type: object
      properties:
        key:
          type: string
          description: Parameter key
        displayName:
          type: string
          description: Parameter display name
        values:
          type: array
          description: Parameter values
          items:
            type: string
            description: Parameter values
      description: Parameter model
    Priority:
      type: string
      description: Priority model
      enum:
      - LOW
      - MEDIUM
      - HIGH
    Stakeholder:
      type: object
      properties:
        externalId:
          type: string
          description: Unique identifier for the stakeholder
          example: cb20c51f-fcf3-42c0-b613-de563634a8ec
        externalIdType:
          type: string
          description: Type of external id
          example: PRIVATE
        role:
          type: string
          description: Role of stakeholder
          example: ADMINISTRATOR
        city:
          type: string
          description: City
          example: Cottington
        organizationName:
          type: string
          description: Organization name
          example: Vogon Constructor Fleet
        firstName:
          type: string
          description: First name
          example: Aurthur
        lastName:
          type: string
          description: Last name
          example: Dent
        address:
          type: string
          description: Address
          example: "155 Country Lane, Cottington"
        careOf:
          type: string
          description: Care of
          example: Ford Prefect
        zipCode:
          type: string
          description: Zip code
          example: "12345"
        country:
          type: string
          description: Country
          example: United Kingdom
        contactChannels:
          type: array
          items:
            $ref: "#/components/schemas/ContactChannel"
        parameters:
          type: array
          description: Parameters for the stakeholder
          items:
            $ref: "#/components/schemas/Parameter"
      description: Stakeholder model
    Suspension:
      type: object
      properties:
        suspendedTo:
          type: string
          description: Timestamp when the suspension wears off
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        suspendedFrom:
          type: string
          description: Timestamp when the suspension started
          format: date-time
          example: 2000-10-31T01:30:00+02:00
      description: Suspension information
    Notification:
      required:
      - description
      - ownerFullName
      - ownerId
      - type
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the notification
          example: 123e4567-e89b-12d3-a456-426614174000
        created:
          type: string
          description: Timestamp when the notification was created
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the notification was last modified
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        ownerFullName:
          type: string
          description: Name of the owner of the notification
          example: Test Testorsson
        ownerId:
          type: string
          description: Owner id of the notification
          example: AD01
        createdBy:
          type: string
          description: User who created the notification
          example: TestUser
        createdByFullName:
          type: string
          description: Full name of the user who created the notification
          readOnly: true
          example: Test Testorsson
        type:
          type: string
          description: Type of the notification
          example: CREATE
        description:
          type: string
          description: Description of the notification
          example: Some description of the notification
        content:
          type: string
          description: Content of the notification
          example: Some content of the notification
        expires:
          type: string
          description: Timestamp when the notification expires
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        acknowledged:
          type: boolean
          description: Acknowledged status of the notification
          example: true
        errandId:
          type: string
          description: Errand id of the notification
          readOnly: true
          example: f0882f1d-06bc-47fd-b017-1d8307f5ce95
        errandNumber:
          type: string
          description: Errand number of the notification
          readOnly: true
          example: PRH-2022-000001
    CreateErrandNoteRequest:
      required:
      - body
      - context
      - createdBy
      - role
      - subject
      type: object
      properties:
        context:
          maxLength: 255
          minLength: 1
          type: string
          description: Context for note
          example: SUPPORT
        role:
          maxLength: 255
          minLength: 1
          type: string
          description: Role of note creator
          example: FIRST_LINE_SUPPORT
        partyId:
          type: string
          description: Party id (e.g. a personId or an organizationId)
          example: 81471222-5798-11e9-ae24-57fa13b361e1
        subject:
          maximum: 255
          maxLength: 255
          minLength: 1
          type: string
          description: The note subject
          example: This is a subject
        body:
          maximum: 2048
          maxLength: 2048
          minLength: 1
          type: string
          description: The note body
          example: This is a note
        createdBy:
          type: string
          description: Created by
          example: John Doe
      description: CreateErrandNoteRequest model
    SmsRequest:
      required:
      - message
      - recipient
      - sender
      type: object
      properties:
        sender:
          maxLength: 11
          minLength: 1
          type: string
          description: The sender of the SMS
          example: sender
        recipient:
          type: string
          description: "Mobile number to recipient in format +467[02369]\\d{7}"
          example: "+46761234567"
        message:
          type: string
          description: Message
      description: SmsRequest model
    EmailAttachment:
      required:
      - base64EncodedString
      - name
      type: object
      properties:
        name:
          type: string
          description: The attachment filename
          example: test.txt
        base64EncodedString:
          type: string
          description: "The attachment (file) content as a BASE64-encoded string,\
            \ max size 10 MB"
          format: base64
          example: aGVsbG8gd29ybGQK
      description: EmailAttachment model
    EmailRequest:
      required:
      - htmlMessage
      - message
      - recipient
      - sender
      - subject
      type: object
      properties:
        sender:
          type: string
          description: Email address for sender
          example: sender@sender.se
        senderName:
          type: string
          description: "Optional displayname of sender on email. If left out, email\
            \ will be displayed as sender name."
          example: Firstname Lastname
        recipient:
          type: string
          description: Email address for recipient
          example: recipient@recipient.se
        subject:
          type: string
          description: Subject
          example: Subject
        htmlMessage:
          type: string
          description: Message in html (optionally in BASE64 encoded format)
          example: <html>HTML-formatted message</html>
        message:
          type: string
          description: Message in plain text
          example: Message in plain text
        emailHeaders:
          type: object
          additionalProperties:
            type: array
            description: Headers for keeping track of email conversations
            example:
              IN_REPLY_TO:
              - reply-to@example.com
              REFERENCES:
              - reference1
              - reference2
              MESSAGE_ID:
              - "123456789"
            items:
              type: string
              description: Headers for keeping track of email conversations
              example: "{\"IN_REPLY_TO\":[\"reply-to@example.com\"],\"REFERENCES\"\
                :[\"reference1\",\"reference2\"],\"MESSAGE_ID\":[\"123456789\"]}"
          description: Headers for keeping track of email conversations
          example:
            IN_REPLY_TO:
            - reply-to@example.com
            REFERENCES:
            - reference1
            - reference2
            MESSAGE_ID:
            - "123456789"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/EmailAttachment"
        attachmentIds:
          type: array
          items:
            type: string
            description: List with attachment ids
      description: EmailRequest model
    UpdateErrandNoteRequest:
      required:
      - body
      - modifiedBy
      - subject
      type: object
      properties:
        subject:
          maximum: 255
          maxLength: 255
          minLength: 1
          type: string
          description: The note subject
          example: This is a subject
        body:
          maximum: 2048
          maxLength: 2048
          minLength: 1
          type: string
          description: The note nody
          example: This is a note
        modifiedBy:
          type: string
          description: Modified by
          example: John Doe
      description: UpdateErrandNoteRequest model
    ErrandNote:
      type: object
      properties:
        id:
          type: string
          description: Note ID
          example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
        context:
          type: string
          description: Context for note
          example: SUPPORT
        role:
          type: string
          description: Role of note creator
          example: FIRST_LINE_SUPPORT
        clientId:
          type: string
          description: Id of the client who is the owner of the note
          example: SUPPORT_MGMT
        partyId:
          type: string
          description: Party ID (e.g. a personId or an organizationId)
          example: 81471222-5798-11e9-ae24-57fa13b361e1
        subject:
          type: string
          description: The note subject
          example: This is a subject
        body:
          type: string
          description: The note body
          example: This is a note
        caseId:
          type: string
          description: Id for the case
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        createdBy:
          type: string
          description: Created by
          example: John Doe
        modifiedBy:
          type: string
          description: Modified by
          example: John Doe
        created:
          type: string
          description: Created timestamp
          format: date-time
        modified:
          type: string
          description: Modified timestamp
          format: date-time
      description: ErrandNote model
    Labels:
      type: object
      properties:
        created:
          type: string
          description: Timestamp when the labels was created
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        modified:
          type: string
          description: Timestamp when the labels was last modified
          format: date-time
          readOnly: true
          example: 2000-10-31T01:30:00+02:00
        labelStructure:
          type: array
          items:
            $ref: "#/components/schemas/Label"
      description: Labels model
      readOnly: true
    MetadataResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        externalIdTypes:
          type: array
          items:
            $ref: "#/components/schemas/ExternalIdType"
        labels:
          $ref: "#/components/schemas/Labels"
        statuses:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        contactReasons:
          type: array
          items:
            $ref: "#/components/schemas/ContactReason"
      description: MetadataResponse model
    PageErrand:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/Errand"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        numberOfElements:
          type: integer
          format: int32
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        numberOfElements:
          type: integer
          format: int32
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        first:
          type: boolean
        last:
          type: boolean
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
<<<<<<< HEAD
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
        paged:
          type: boolean
>>>>>>> fd310fe (UF-10583: Update API)
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
<<<<<<< HEAD
        paged:
          type: boolean
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
<<<<<<< HEAD
>>>>>>> fd310fe (UF-10583: Update API)
=======
=======
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
<<<<<<< HEAD
>>>>>>> 416de18 (UF-10583: Update API)
=======
=======
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
    Revision:
      type: object
      properties:
        id:
          type: string
          description: Unique id for the revision
          example: 391e97b7-2e78-42e2-9a60-fe49fbfa94f1
        entityId:
          type: string
          description: Unique id for the entity connected to the revision
          example: 3af4844d-a75f-4e25-a2a0-355eb642dd2d
        entityType:
          type: string
          description: Type of entity for the revision
          example: ErrandEntity
        version:
          type: integer
          description: Version of the revision
          format: int32
          example: 1
        created:
          type: string
          description: Timestamp when the revision was created
          format: date-time
          example: 2000-10-31T01:30:00+02:00
      description: Revision model
      readOnly: true
    DifferenceResponse:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: "#/components/schemas/Operation"
      description: DifferenceResponse model
      readOnly: true
    Operation:
      type: object
      properties:
        op:
          type: string
          description: Type of operation
          example: replace
        path:
          type: string
          description: Path to attribute
          example: /name/firstName
        value:
          type: string
          description: Value of attribute
          example: Jane
        fromValue:
          type: string
          description: Previous value of attribute
          example: John
      description: Operation model
      readOnly: true
    FindErrandNotesRequest:
      type: object
      properties:
        context:
          type: string
          description: Context for note
          example: SUPPORT
        role:
          type: string
          description: Role of note creator
          example: FIRST_LINE_SUPPORT
        partyId:
          type: string
          description: Party id (e.g. a personId or an organizationId)
          example: 81471222-5798-11e9-ae24-57fa13b361e1
        page:
          minimum: 1
          type: integer
          description: Page number
          format: int32
          example: 1
          default: 1
        limit:
          maximum: 1000
          minimum: 1
          type: integer
          description: Result size per page
          format: int32
          example: 100
          default: 100
      description: FindErrandNotesRequest model
    FindErrandNotesResponse:
      type: object
      properties:
        notes:
          type: array
          items:
            $ref: "#/components/schemas/ErrandNote"
        _meta:
          $ref: "#/components/schemas/MetaData"
      description: FindErrandNotesResponse model
      readOnly: true
    MetaData:
      type: object
      properties:
        page:
          type: integer
          description: Current page
          format: int32
          readOnly: true
          example: 5
        limit:
          type: integer
          description: Displayed objects per page
          format: int32
          readOnly: true
          example: 20
        count:
          type: integer
          description: Displayed objects on current page
          format: int32
          readOnly: true
          example: 13
        totalRecords:
          type: integer
          description: Total amount of hits based on provided search parameters
          format: int64
          readOnly: true
          example: 98
        totalPages:
          type: integer
          description: Total amount of pages based on provided search parameters
          format: int32
          readOnly: true
          example: 23
      description: Metadata model
    Event:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/EventType"
        message:
          type: string
          description: Event description
          example: Errand has been created
        owner:
          type: string
          description: Service that created event
          example: SupportManagement
        created:
          type: string
          description: Timestamp when the event was created
          format: date-time
          example: 2000-10-31T01:30:00+02:00
        historyReference:
          type: string
          description: Reference to the snapshot of data at the time when the event
            was created
          example: fbe2fb67-005c-4f26-990f-1c95b5f6933e
        sourceType:
          type: string
          description: Source which the event refers to
          example: errand
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/EventMetaData"
      description: Event model
      readOnly: true
    EventMetaData:
      type: object
      properties:
        key:
          type: string
          description: The key
          example: userId
        value:
          type: string
          description: The value
          example: john123
      description: Event Metadata model
    EventType:
      type: string
      description: Type of event
      enum:
      - CREATE
      - UPDATE
      - DELETE
      - UNKNOWN
    PageEvent:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        numberOfElements:
          type: integer
          format: int32
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
<<<<<<< HEAD
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
=======
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
=======
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        numberOfElements:
          type: integer
          format: int32
>>>>>>> 1f8513d (UF-10583: Acted on review comments)
        first:
          type: boolean
        last:
          type: boolean
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
>>>>>>> 73802a4 (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
=======
        pageable:
          $ref: "#/components/schemas/PageableObject"
>>>>>>> a5246de (UF-10368: Add new resource for listing notifications by errandId)
<<<<<<< HEAD
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
>>>>>>> b0ad4fc (UF-10583: Acted on review comments)
=======
>>>>>>> 4e60d60 (UF-10368: Add new resource for listing notifications by errandId)
=======
>>>>>>> bc1d833 (UF-10368: Add new resource for listing notifications by errandId)
        empty:
          type: boolean
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
    ErrandAttachmentHeader:
      required:
        - fileName
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the attachment
          readOnly: true
          example: cb20c51f-fcf3-42c0-b613-de563634a8ec
        fileName:
          type: string
          description: Name of the file
          example: my-file.txt
        mimeType:
          type: string
          description: Mime type of the file
          readOnly: true
      description: ErrandAttachmentHeader model
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> 416de18 (UF-10583: Update API)
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
=======
>>>>>>> 29c3b9f (UF-10583: Acted on review comments)
        empty:
          type: boolean
<<<<<<< HEAD
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    Communication:
      type: object
      properties:
        communicationID:
          type: string
          description: The communication ID
          example: "12"
        sender:
          type: string
          description: Sender of the communication.
          example: Test Testsson
        errandNumber:
          type: string
          description: The errand number
          example: PRH-2022-000001
        direction:
          type: string
          description: If the communication is inbound or outbound from the perspective
            of case-data/e-service.
          example: INBOUND
          enum:
          - INBOUND
          - OUTBOUND
        messageBody:
          type: string
          description: The message body
          example: Hello world
        sent:
          type: string
          description: The time the communication was sent
          format: date-time
        subject:
          type: string
          description: The email-subject of the message
          example: Hello world
        communicationType:
          type: string
          description: The message was delivered by
          example: EMAIL
          enum:
          - SMS
          - EMAIL
        target:
          type: string
          description: The mobile number or email adress the communication was sent
            to
          example: "+46701234567"
        viewed:
          type: boolean
          description: Signal if the message has been viewed or not
          example: true
        emailHeaders:
          type: object
          additionalProperties:
            type: array
            description: Headers for keeping track of email conversations
            example:
              IN_REPLY_TO:
              - reply-to@example.com
              REFERENCES:
              - reference1
              - reference2
              MESSAGE_ID:
              - "123456789"
            items:
              type: string
              description: Headers for keeping track of email conversations
              example: "{\"IN_REPLY_TO\":[\"reply-to@example.com\"],\"REFERENCES\"\
                :[\"reference1\",\"reference2\"],\"MESSAGE_ID\":[\"123456789\"]}"
          description: Headers for keeping track of email conversations
          example:
            IN_REPLY_TO:
            - reply-to@example.com
            REFERENCES:
            - reference1
            - reference2
            MESSAGE_ID:
            - "123456789"
        communicationAttachments:
          type: array
          description: List of communicationAttachments on the message
          items:
            $ref: "#/components/schemas/CommunicationAttachment"
    CommunicationAttachment:
      type: object
      properties:
        attachmentID:
          type: string
          description: The attachment ID
          example: aGVsbG8gd29ybGQK
        name:
          type: string
          description: The attachment filename
          example: test.txt
        contentType:
          type: string
          description: The attachment content type
          example: text/plain
      description: List of communicationAttachments on the message
<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
  securitySchemes: { }
=======
>>>>>>> fd310fe (UF-10583: Update API)
=======
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
    ErrandAttachmentHeader:
      required:
      - fileName
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the attachment
          readOnly: true
          example: cb20c51f-fcf3-42c0-b613-de563634a8ec
        fileName:
          type: string
          description: Name of the file
          example: my-file.txt
        mimeType:
          type: string
          description: Mime type of the file
          readOnly: true
      description: ErrandAttachmentHeader model
<<<<<<< HEAD
  securitySchemes: {}
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
  securitySchemes: {}
=======
  securitySchemes: {}
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> fd310fe (UF-10583: Update API)
=======
  securitySchemes: {}
>>>>>>> ea33d37 (UF-10806: Resolve merge conflicts)
=======
  securitySchemes: {}
>>>>>>> 4aad4eb (UF-10583: Update API)
>>>>>>> 416de18 (UF-10583: Update API)
